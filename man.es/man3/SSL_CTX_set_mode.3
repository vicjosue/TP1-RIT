SSL_CTX_set_mode(3)          OpenSSL          SSL_CTX_set_mode(3)



NNAAMMEE
       SSL_CTX_set_mode, SSL_set_mode, SSL_CTX_get_mode,
       SSL_get_mode - manipulate SSL engine mode

SSYYNNOOPPSSIISS
        #include <openssl/ssl.h>

        long SSL_CTX_set_mode(SSL_CTX *ctx, long mode);
        long SSL_set_mode(SSL *ssl, long mode);

        long SSL_CTX_get_mode(SSL_CTX *ctx);
        long SSL_get_mode(SSL *ssl);


DDEESSCCRRIIPPTTIIOONN
       SSL_CTX_set_mode() adds the mode set via bitmask in mmooddee
       to ccttxx.  Options already set before are not cleared.

       SSL_set_mode() adds the mode set via bitmask in mmooddee to
       ssssll.  Options already set before are not cleared.

       SSL_CTX_get_mode() returns the mode set for ccttxx.

       SSL_get_mode() returns the mode set for ssssll.

NNOOTTEESS
       The following mode changes are available:

       SSL_MODE_ENABLE_PARTIAL_WRITE
           Allow SSL_write(..., n) to return r with 0 < r < n
           (i.e. report success when just a single record has
           been written). When not set (the default), SSL_write()
           will only report success once the complete chunk was
           written.  Once SSL_write() returns with r, r bytes
           have been successfully written and the next call to
           SSL_write() must only send the n-r bytes left,
           imitating the behaviour of write().

       SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER
           Make it possible to retry SSL_write() with changed
           buffer location (the buffer contents must stay the
           same). This is not the default to avoid the
           misconception that non-blocking SSL_write() behaves
           like non-blocking write().

       SSL_MODE_AUTO_RETRY
           Never bother the application with retries if the
           transport is blocking.  If a renegotiation take place
           during normal operation, a SSL_read(3) or SSL_write(3)
           would return with -1 and indicate the need to retry
           with SSL_ERROR_WANT_READ.  In a non-blocking
           environment applications must be prepared to handle
           incomplete read/write operations.  In a blocking
           environment, applications are not always prepared to
           deal with read/write operations returning without
           success report. The flag SSL_MODE_AUTO_RETRY will
           cause read/write operations to only return after the
           handshake and successful completion.

RREETTUURRNN VVAALLUUEESS
       SSL_CTX_set_mode() and SSL_set_mode() return the new mode
       bitmask after adding mmooddee.

       SSL_CTX_get_mode() and SSL_get_mode() return the current
       bitmask.

SSEEEE AALLSSOO
       ssl(3), SSL_read(3), SSL_write(3)

HHIISSTTOORRYY
       SSL_MODE_AUTO_RETRY as been added in OpenSSL 0.9.6.















11/Jul/2001                   0.9.6c          SSL_CTX_set_mode(3)
