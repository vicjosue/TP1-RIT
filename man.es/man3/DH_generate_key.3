DH_generate_key(3)           OpenSSL           DH_generate_key(3)



NNAAMMEE
       DH_generate_key, DH_compute_key - perform Diffie-Hellman
       key exchange

SSYYNNOOPPSSIISS
        #include <openssl/dh.h>

        int DH_generate_key(DH *dh);

        int DH_compute_key(unsigned char *key, BIGNUM *pub_key, DH *dh);


DDEESSCCRRIIPPTTIIOONN
       DH_generate_key() performs the first step of a Diffie-
       Hellman key exchange by generating private and public DH
       values. By calling DH_compute_key(), these are combined
       with the other party's public value to compute the shared
       key.

       DH_generate_key() expects ddhh to contain the shared
       parameters ddhh-->>pp and ddhh-->>gg. It generates a random private
       DH value unless ddhh-->>pprriivv_kkeeyy is already set, and computes
       the corresponding public value ddhh-->>ppuubb_kkeeyy, which can then
       be published.

       DH_compute_key() computes the shared secret from the
       private DH value in ddhh and the other party's public value
       in ppuubb_kkeeyy and stores it in kkeeyy. kkeeyy must point to
       DDHH_ssiizzee((ddhh)) bytes of memory.

RREETTUURRNN VVAALLUUEESS
       DH_generate_key() returns 1 on success, 0 otherwise.

       DH_compute_key() returns the size of the shared secret on
       success, -1 on error.

       The error codes can be obtained by ERR_get_error(3).

SSEEEE AALLSSOO
       dh(3), err(3), rand(3), DH_size(3)

HHIISSTTOORRYY
       DH_generate_key() and DH_compute_key() are available in
       all versions of SSLeay and OpenSSL.











27/Jul/2001                   0.9.6c           DH_generate_key(3)
