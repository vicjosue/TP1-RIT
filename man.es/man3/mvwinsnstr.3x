curs_insstr(3X)                                   curs_insstr(3X)



NAME
       insstr,  insnstr,  winsstr, winsnstr, mvinsstr, mvinsnstr,
       mvwinsstr, mvwinsnstr - insert string before cursor  in  a
       curses window

SYNOPSIS
       #include <curses.h>
       int insstr(const char *str);
       int insnstr(const char *str, int n);
       int winsstr(WINDOW *win, const char *str);
       int winsnstr(WINDOW *win, const char *str, int n);
       int mvinsstr(int y, int x, const char *str);
       int mvinsnstr(int y, int x, const char *str, int n);
       int mvwinsstr(WINDOW *win, int y, int x, const char *str);
       int mvwinsnstr(WINDOW *win, int y, int x, const char *str,
       int n);

DESCRIPTION
       These  routines insert a character string (as many charac­
       ters as will fit on the line) before the  character  under
       the cursor.  All characters to the right of the cursor are
       shifted right, with the possibility of the rightmost char­
       acters  on  the line being lost.  The cursor position does
       not change (after moving to y, x, if specified). The  four
       routines with n as the last argument insert a leading sub­
       string of at most n characters.  If n<=0, then the  entire
       string is inserted.

       If  a  character in str is a tab, newline, carriage return
       or backspace, the cursor is moved appropriately within the
       window.   A  newline  also  does a clrtoeol before moving.
       Tabs are considered to be at every eighth  column.   If  a
       character in str is another control character, it is drawn
       in the ^X notation.  Calling winch after adding a  control
       character (and moving to it, if necessary) does not return
       the control character, but instead returns a character  in
       the ^-representation of the control character.

RETURN VALUE
       All  routines that return an integer return ERR upon fail­
       ure and OK (SVr4 specifies only "an  integer  value  other
       than  ERR")  upon  successful completion, unless otherwise
       noted in the preceding routine descriptions.

NOTES
       Note that all but winsnstr may be macros.

PORTABILITY
       These functions are described in the XSI Curses  standard,
       Issue  4,  which  adds  const qualifiers to the arguments.
       The XSI Curses error  conditions  EILSEQ  and  EILOVERFLOW
       associated  with  extended-level  conformance  are not yet
       detected (this implementation does not  yet  support  XPG4
       multibyte characters).

SEE ALSO
       curses(3X), curs_clear(3X), curs_inch(3X).



                                                  curs_insstr(3X)
