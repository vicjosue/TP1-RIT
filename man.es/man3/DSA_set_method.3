DSA_set_method(3)            OpenSSL            DSA_set_method(3)



NNAAMMEE
       DSA_set_default_method, DSA_get_default_method,
       DSA_set_method, DSA_new_method, DSA_OpenSSL - select DSA
       method

SSYYNNOOPPSSIISS
        #include <openssl/dsa.h>

        void DSA_set_default_method(DSA_METHOD *meth);

        DSA_METHOD *DSA_get_default_method(void);

        DSA_METHOD *DSA_set_method(DSA *dsa, DSA_METHOD *meth);

        DSA *DSA_new_method(DSA_METHOD *meth);

        DSA_METHOD *DSA_OpenSSL(void);


DDEESSCCRRIIPPTTIIOONN
       A DDSSAA_MMEETTHHOODD specifies the functions that OpenSSL uses for
       DSA operations. By modifying the method, alternative
       implementations such as hardware accelerators may be used.

       Initially, the default is to use the OpenSSL internal
       implementation.  DSA_OpenSSL() returns a pointer to that
       method.

       DSA_set_default_method() makes mmeetthh the default method for
       all DDSSAA structures created later.

       DSA_get_default_method() returns a pointer to the current
       default method.

       DSA_set_method() selects mmeetthh for all operations using the
       structure ddssaa.

       DSA_new_method() allocates and initializes a DDSSAA structure
       so that mmeetthhoodd will be used for the DSA operations. If
       mmeetthhoodd is NNUULLLL, the default method is used.

TTHHEE DDSSAA_MMEETTHHOODD SSTTRRUUCCTTUURREE
       struct
        {
            /* name of the implementation */
               const char *name;

            /* sign */
               DSA_SIG *(*dsa_do_sign)(const unsigned char *dgst, int dlen,
                                        DSA *dsa);

            /* pre-compute k^-1 and r */
               int (*dsa_sign_setup)(DSA *dsa, BN_CTX *ctx_in, BIGNUM **kinvp,
                                        BIGNUM **rp);

            /* verify */
               int (*dsa_do_verify)(const unsigned char *dgst, int dgst_len,
                                        DSA_SIG *sig, DSA *dsa);




            /* compute rr = a1^p1 * a2^p2 mod m (May be NULL for some
                                                 implementations) */
               int (*dsa_mod_exp)(DSA *dsa, BIGNUM *rr, BIGNUM *a1, BIGNUM *p1,
                                        BIGNUM *a2, BIGNUM *p2, BIGNUM *m,
                                        BN_CTX *ctx, BN_MONT_CTX *in_mont);

            /* compute r = a ^ p mod m (May be NULL for some implementations) */
               int (*bn_mod_exp)(DSA *dsa, BIGNUM *r, BIGNUM *a,
                                        const BIGNUM *p, const BIGNUM *m,
                                        BN_CTX *ctx, BN_MONT_CTX *m_ctx);

            /* called at DSA_new */
               int (*init)(DSA *DSA);

            /* called at DSA_free */
               int (*finish)(DSA *DSA);

               int flags;

               char *app_data; /* ?? */

        } DSA_METHOD;


RREETTUURRNN VVAALLUUEESS
       DSA_OpenSSL() and DSA_get_default_method() return pointers
       to the respective DDSSAA_MMEETTHHOODDs.

       DSA_set_default_method() returns no value.

       DSA_set_method() returns a pointer to the DDSSAA_MMEETTHHOODD
       previously associated with ddssaa.

       DSA_new_method() returns NNUULLLL and sets an error code that
       can be obtained by ERR_get_error(3) if the allocation
       fails. Otherwise it returns a pointer to the newly
       allocated structure.

SSEEEE AALLSSOO
       dsa(3), DSA_new(3)

HHIISSTTOORRYY
       DSA_set_default_method(), DSA_get_default_method(),
       DSA_set_method(), DSA_new_method() and DSA_OpenSSL() were
       added in OpenSSL 0.9.4.












29/May/2000                   0.9.6c            DSA_set_method(3)
