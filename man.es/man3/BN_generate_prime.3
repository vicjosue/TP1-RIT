BN_generate_prime(3)         OpenSSL         BN_generate_prime(3)



NNAAMMEE
       BN_generate_prime, BN_is_prime, BN_is_prime_fasttest -
       generate primes and test for primality

SSYYNNOOPPSSIISS
        #include <openssl/bn.h>

        BIGNUM *BN_generate_prime(BIGNUM *ret, int num, int safe, BIGNUM *add,
            BIGNUM *rem, void (*callback)(int, int, void *), void *cb_arg);

        int BN_is_prime(const BIGNUM *a, int checks, void (*callback)(int, int,
            void *), BN_CTX *ctx, void *cb_arg);

        int BN_is_prime_fasttest(const BIGNUM *a, int checks,
            void (*callback)(int, int, void *), BN_CTX *ctx, void *cb_arg,
            int do_trial_division);


DDEESSCCRRIIPPTTIIOONN
       BN_generate_prime() generates a pseudo-random prime number
       of nnuumm bits.  If rreett is not NNUULLLL, it will be used to store
       the number.

       If ccaallllbbaacckk is not NNUULLLL, it is called as follows:

       ·   ccaallllbbaacckk((00,, ii,, ccbb_aarrgg)) is called after generating the
           i-th potential prime number.

       ·   While the number is being tested for primality,
           ccaallllbbaacckk((11,, jj,, ccbb_aarrgg)) is called as described below.

       ·   When a prime has been found, ccaallllbbaacckk((22,, ii,, ccbb_aarrgg)) is
           called.

       The prime may have to fulfill additional requirements for
       use in Diffie-Hellman key exchange:

       If aadddd is not NNUULLLL, the prime will fulfill the condition p
       % aadddd == rreemm (p % aadddd == 1 if rreemm == NNUULLLL) in order to
       suit a given generator.

       If ssaaffee is true, it will be a safe prime (i.e. a prime p
       so that (p-1)/2 is also prime).

       The PRNG must be seeded prior to calling
       BN_generate_prime().  The prime number generation has a
       negligible error probability.

       BN_is_prime() and BN_is_prime_fasttest() test if the
       number aa is prime.  The following tests are performed
       until one of them shows that aa is composite; if aa passes
       all these tests, it is considered prime.

       BN_is_prime_fasttest(), when called with ddoo_ttrriiaall_ddiivviissiioonn
       ==== 11, first attempts trial division by a number of small
       primes; if no divisors are found by this test and ccaallllbbaacckk
       is not NNUULLLL, ccaallllbbaacckk((11,, --11,, ccbb_aarrgg)) is called.  If
       ddoo_ttrriiaall_ddiivviissiioonn ==== 00, this test is skipped.

       Both BN_is_prime() and BN_is_prime_fasttest() perform a
       Miller-Rabin probabilistic primality test with cchheecckkss
       iterations. If cchheecckkss ==== BBNN_pprriimmee_cchheecckk, a number of
       iterations is used that yields a false positive rate of at
       most 2^-80 for random input.

       If ccaallllbbaacckk is not NNUULLLL, ccaallllbbaacckk((11,, jj,, ccbb_aarrgg)) is called
       after the j-th iteration (j = 0, 1, ...). ccttxx is a pre-
       allocated BBNN_CCTTXX (to save the overhead of allocating and
       freeing the structure in a loop), or NNUULLLL.

RREETTUURRNN VVAALLUUEESS
       BN_generate_prime() returns the prime number on success,
       NNUULLLL otherwise.

       BN_is_prime() returns 0 if the number is composite, 1 if
       it is prime with an error probability of less than
       0.25^cchheecckkss, and -1 on error.

       The error codes can be obtained by ERR_get_error(3).

SSEEEE AALLSSOO
       bn(3), err(3), rand(3)

HHIISSTTOORRYY
       The ccbb_aarrgg arguments to BN_generate_prime() and to
       BN_is_prime() were added in SSLeay 0.9.0. The rreett argument
       to BN_generate_prime() was added in SSLeay 0.9.1.
       BN_is_prime_fasttest() was added in OpenSSL 0.9.5.














24/Feb/2000                   0.9.6c         BN_generate_prime(3)
