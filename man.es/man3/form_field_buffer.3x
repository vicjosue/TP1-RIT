form_field_buffer(3X)                       form_field_buffer(3X)



NAME
       form_field_buffer - field buffer control

SYNOPSIS
       #include <form.h>
       int  set_field_buffer(FIELD  *field,  int  buf, const char
       *value);
       char *field_buffer(const FIELD *field, int buffer);
       int set_field_status(FIELD *field, bool status);
       bool field_status(const FIELD *field);
       int set_max_field(FIELD *field, int max);

DESCRIPTION
       The function set_field_buffer sets the numbered buffer  of
       the  given  field  to contain a given string.  Buffer 0 is
       the displayed value of the field; other  numbered  buffers
       may be allocated by applications through the nbuf argument
       of (see form_field_new(3X)) but are not manipulated by the
       forms  library.   The  function  field_buffer  returns the
       address of the buffer.  Please note that this  buffer  has
       always  the  length  of the buffer, that means that it may
       typically contain trailing spaces. If you entered  leading
       spaces  the  buffer may also contain them. If you want the
       raw data, you must write your own routine that copies  the
       value out of the buffer and removes the leading and trail­
       ing spaces. Please note also, that  subsequent  operations
       on  the  form  will  probably  change  the  content of the
       buffer. So don't use it  for  long  term  storage  of  the
       entered form data.

       The  function  set_field_status sets the associated status
       flag of field; field_status gets the current  value.   The
       status  flag  is set to a nonzero value whenever the field
       changes.

       The function set_max_field sets the  maximum  size  for  a
       dynamic  field.   An  argument  of 0 turns off any maximum
       size threshold for that field.

RETURN VALUE
       The field_buffer function returns NULL on error.

       The field_status function returns TRUE or FALSE.

       The remaining routines return one of the following:

       E_OK The routine succeeded.

       E_SYSTEM_ERROR
            System error occurred (see errno).

       E_BAD_ARGUMENT
            Routine detected an incorrect or  out-of-range  argu­
            ment.

SEE ALSO
       curses(3X)  and  3X  pages  whose  names begin "form_" for
       detailed descriptions of the entry points.

NOTES
       The header file <form.h> automatically includes the header
       file <curses.h>.

PORTABILITY
       These  routines  emulate the System V forms library.  They
       were not supported on Version 7 or BSD versions.

AUTHORS
       Juergen Pfeifer.  Manual  pages  and  adaptation  for  new
       curses by Eric S. Raymond.



                                            form_field_buffer(3X)
