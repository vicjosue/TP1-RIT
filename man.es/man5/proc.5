PROC(5)          Manual del Programador de Linux          PROC(5)



NOMBRE
       proc - pseudo-sistema de ficheros de información de proce­
       sos


DESCRIPCIÓN
       /proc es un pseudo-sistema de ficheros  que  se  usa  como
       interfaz para las estructuras de datos del kernel en lugar
       de leer e interpretar /dev/kmem. La mayor  parte  de  este
       sistema  de  ficheros  es  de  sólo  lectura, pero algunos
       ficheros permiten cambiar variables del kernel.

       El siguiente resumen proporciona una rápida  visita  a  la
       jerarquía /proc.


       [number]
              Hay un subdirectorio numérico para cada proceso en
              ejecución; el nombre del subdirectorio es el ID del
              proceso. Cada uno de ellos contiene los siguientes
              pseudo ficheros y directorios.

              cmdline
                     Este contiene la línea de comandos completa
                     para el proceso, a menos que el proceso
                     entero se haya intercambiado a disco o a
                     menos que el proceso sea un proceso zombie.
                     En cualquiera de estos dos últimos casos, no
                     hay nada en el fichero, es decir, una
                     lectura sobre este fichero regresará como si
                     hubiera leído 0 caracteres.  Este fichero
                     termina en un carácter nulo, no en un
                     carácter "nueva línea".

              cwd    Este es un enlace hacia el directorio de
                     trabajo actual del proceso. Por ejemplo,
                     para encontrar el directorio de trabajo
                     actual del proceso 20, puede hacer esto:
                     cd /proc/20/cwd; /bin/pwd

              Dese cuenta que la orden pwd es frecuentemente una
              orden interna del shell, y podría no funcionar
              adecuadamente en este contexto.


              environ
                     Este fichero contiene el entorno del
                     proceso. Las entradas están serparadas por
                     caracteres nulos, y podría haber un carácter
                     nulo al final. Por tanto, para mostrar el
                     entorno del proceso 1, debería hacer:
                     (cat /proc/1/environ; echo) | tr "\000" "\n"

              (Una razón por la que alguien querría hacer esto,
              la puede encontrar en lilo(8).)

              exe    un puntero al fichero binario que fue
                     ejecutado; aparece com un enlace simbólico.
                     La función readlink(2) aplicada al fichero
                     especial "exe" devuelve, bajo Linux 2.0 y
                     versiones anteriores, una cadena con el
                     formato:

                     [dispositivo]:nodo-i

                     Por ejemplo, [0301]:1502 sería el nodo-i
                     1502 sobre el dispositivo con número mayor
                     03 (discos IDE, MFM, etc.) y número menor 01
                     (primera partición del primer disco.  Bajo
                     Linux 2.2 el enlace contiene el nombre de la
                     ruta actual de la orden.

                     También, el enlace simbólico se puede
                     dereferenciar normalmente - un intento de
                     abrir "exe" abrirá el fichero ejecutable.
                     Incluso puede escribir /proc/[número]/exe
                     para ejecutar otra copia del proceso
                     [número].

                     find(1) con la opción -inum se puede usar
                     para buscar el fichero.

              fd     Este es un subdirectorio que contiene una
                     entrada por cada fichero que tiene abierto
                     el proceso, nombrada con el descriptor del
                     fichero, y la cual es un enlace simbólico al
                     fichero real (como lo es la entrada exe).
                     Por tanto, 0 es la entrada estándar, 1 es la
                     salida estándar, 2 es la salida estándar de
                     rror, etc.

                     Los programas que no leen de la entrada
                     estándar, sino que leen de un fichero, y que
                     no escriben en la salida estándar, sino que
                     escriben en un fichero, pueden ser engañados
                     de la siguiente manera, suponiendo que -i es
                     la opción que designa al fichero de entrada
                     y -o la opción que designa al fichero de
                     salida:
                     foobar -i /proc/self/fd/0 -o /proc/self/fd/1
                     y de esta manera su programa funcionará como
                     filtro.  Note que esto no funcionará en
                     programas que realizan accesos aleatorios
                     sobre sus ficheros, ya que los ficheros del
                     directorio fd no permiten este tipo de
                     acceso.

                     /proc/self/fd/N es aproximadamente lo mismo
                     que /dev/fd/N en algunos sistemas UNIX y
                     sistemas al estilo UNIX. De hecho, la
                     mayoría de los guiones shell MAKEDEV de
                     Linux enlazan simbólicamente
                     [..]/proc/self/fd con /dev/fd.

              maps   Fichero que contiene las regiones de memoria
                     actualmente asociadas y sus permisos de
                     acceso.

                     El formato es:
                        Dirección         perms desplaz  disp  nodo-i
                        00000000-0002f000 r-x-- 00000400 03:03 1401
                        0002f000-00032000 rwx-p 0002f400 03:03 1401
                        00032000-0005b000 rwx-p 00000000 00:00 0
                        60000000-60098000 rwx-p 00000400 03:03 215
                        60098000-600c7000 rwx-p 00000000 00:00 0
                        bfffa000-c0000000 rwx-p 00000000 00:00 0

              donde dirección es el espacio de direcciones del
              proceso que ocupa, perms es un conjunto de
              permisos:
                   r = leer
                   w = escribir
                   x = ejecutar
                   s = compartido
                   p = privado (copia en escritura)

              desplaz es el desplazamiento dentro del
              fichero/cosa, disp es el dispositivo (mayor:menor)
              y nodo-i es el nodo-i en ese dispositivo. 0 indica
              que no hay un nodo-i asociado a la región de
              memoria, como ocurriría con la región bss del
              proceso.

              Bajo Linux 2.2 existe un campo adicional que da un
              nombre de ruta cuando es aplicable.

              mem    Este no es lo mismo que el dispositivo mem
                     (1;1), a pesar de que tiene los mismos
                     números de dispositivo. El dispositivo
                     /dev/mem es la memoria física antes de que
                     se haga cualquier traducción de direcciones,
                     pero aquí el fichero mem es la memoria a la
                     que accede el proceso. Actualmente, a ésta
                     no se le puede aplicar la función mmap(2), y
                     no lo será mientras no se añada al kernel
                     una función.  mmap(2) general.  (Esto podría
                     haber ocurrido cuando lea esto).

              root   Unix y Linux soportan la idea una raíz del
                     sistema de ficheros por proceso, asignada
                     por la llamada al sistema chroot(2).  Root
                     apunta a la raíz del sistema de ficheros y
                     se comporta como lo hacen exe, fd/*, etc.

              stat   Información de estado del proceso. Esta es
                     usada por ps(1).

                     Los campos, en orden, junto con sus
                     indicadores de formato apropiados para
                     scanf(3), son:

                      pid %d Identificador del proceso.

                     comm %s
                             Nombre de fichero del ejecutable, en
                             paréntesis. Este es visible
                             dependiendo de si el ejecutable ha
                             sido o no intercambiado.

                     state %c
                             Un carácter de la cadena "RSDZT"
                             donde R significa en ejecución, S
                             bloqueado de forma interrumpible, D
                             bloqueado de forma ininterrupible o
                             intercambiado, Z zombie y T proceso
                             en ejecución paso a paso o parado
                             (en una señal).

                     ppid %d
                             El PID del padre.

                     pgrp %d
                             El identificador del grupo de
                             procesos del proceso.

                     session %d
                             El identificador de sesión del
                             proceso.

                      tty %d El terminal que usa el proceso.

                     tpgid %d
                             El identificador del grupo de
                             procesos del proceso al que
                             pertenece actualmente la terminal a
                             la que está conectado el proceso.

                     flags %u
                             Las banderas del proceso.
                             Actualmente, cada bandera tiene
                             activo el bit "math", ya que crt0.s
                             comprueba la emulación "math", por
                             lo que éste no se incluye en la
                             salida. Esto es probablemente un
                             error (bug), ya que no todo proceso
                             es un programa en C compilado. El
                             bit "math" debe ser un 4 decimal y
                             el bit "paso a paso" un 10 decimal.


                     minflt %u
                             El número de fallos de página
                             menores producidos por el proceso,
                             es decir, aquellos que no han
                             necesitado la carga de una página de
                             memoria desde disco.

                     cminflt %u
                             El número de fallos de página
                             menores producidos por el proceso y
                             sus hijos.

                     majflt %u
                             El número de fallos de página
                             mayores producidos por el proceso,
                             es decir, aquellos que han
                             necesitado la carga de una página de
                             memoria desde disco.

                     cmajflt %u
                             El número de fallos de página
                             mayores producidos por el proceso y
                             sus hijos.

                     utime %d
                             El número de jiffies que este
                             proceso se ha planificado en modo
                             usario.

                     stime %d
                             El número de jiffies que este
                             proceso se ha planificado en modo
                             núcleo.

                     cutime %d
                             El número de jiffies que este
                             proceso y sus hijos se han
                             planificado en modo usuario.

                     cstime %d
                             El número de jiffies que este
                             proceso y sus hijos se han
                             planificado en modo núcleo.

                     counter %d
                             El tamaño máximo actual, en jiffies,
                             del siguiente quantum del proceso, o
                             lo que queda actualmente de su
                             quantum actual, si él es ahora mismo
                             el proceso en ejecución .

                     priority %d
                             El valor "nice" estándar, más 15. El
                             valor nunca es negativo dentro del
                             núcleo.

                     timeout %u
                             El tiempo, en jiffies, del siguiente
                             "timeout" del proceso.

                     itrealvalue %u
                             El tiempo (en jiffies) antes de que
                             la siguiente señal SIGALRM sea
                             enviada al proceso.

                     starttime %d
                             Tiempo, en jiffies, desde el
                             arranque del sistema hasta el inicio
                             de la ejecución del proceso.

                     vsize %u
                             Tamaño de la memoria virtual.

                      rss %u Tamaño del Conjunto Residente (RSS):
                             número de páginas que el proceso
                             tiene en memoria real, menos 3 (para
                             propósitos administrativos). Dicho
                             conjunto está formado por las
                             páginas que componen actualmente el
                             espacio de código, datos y pila. No
                             incluye aquellas páginas que no se
                             han cargado bajo demanda o que se
                             han intercambiado a disco.

                     rlim %u
                             Límite actual, en bytes, del RSS del
                             proceso (normalmente,
                             2,147,483,647).

                     startcode %u
                             Dirección por encima de la cual se
                             puede ejecutar el código del
                             programa.

                     endcode %u
                             Dirección por debajo de la cual se
                             puede ejecutar el código del
                             programa.

                     startstack %u
                             Dirección de comienzo de la pila.

                     kstkesp %u
                             El valor actual del registro ESP
                             (puntero de pila de 32 bits), tal
                             como se encuentra en la página de
                             pila del proceso.

                     kstkeip %u
                             Valor actual del EIP (puntero de
                             instrucción de 32 bits).

                     signal %d
                             Mapa de bits de señales pendientes
                             (normalmente 0).

                     blocked %d
                             Mapa de bits de señales bloqueadas
                             (normalmente 0, 2 para los shells).

                     sigignore %d
                             Mapa de bits de señales ignoradas.

                     sigcatch %d
                             Mapa de bits de señales capturadas.

                     wchan %u
                             Este es el "canal" en el que está
                             esperando el proceso. Este es la
                             dirección de una llamada al sistema,
                             y se puede mirar en una lista de
                             nombre si necesita un nombre
                             textual. (Pruebe ps -l para ver
                             WCHAN en acción)


       cpuinfo
              Este es una colección de elementos dependientes de
              la CPU y de la arquitectura del sistema. Para cada
              arquitectura soportada, una lista diferente. Las
              únicas dos entradas comunes son cpu que es
              (adivínalo) la CPU que se está usando actualmente y
              BogoMIPS, una constante del sistema que se calcula
              durante el arranque del núcleo.

       devices
              Lista de números mayores de dispositivo y grupos de
              dispositivos. Esta puede ser usada por los guiones
              MAKEDEV para consistencia con el núcleo.

       dma    Esta es una lista de los canales DMA (acceso
              directo a memoria) ISA registrados en uso.

       filesystems
              Lista de los sistemas de ficheros que fueron
              compilados dentro del núcleo.  Incidentalmente,
              mount(1) usa esto para circular a través de
              diferentes sistemas de ficheros cuando no se
              especifica ninguno.

       interrupts
              Este es usado para registrar el número de
              interrupciones para cada IRQ sobre (al menos) la
              arquitectura i386. El formato es muy fácil de leer,
              realizado en ASCII.

       ioports
              Este es una lista de las regiones de puertos de
              Entrada/Salida actualmente registrados que están en
              uso.

       kcore  Este fichero representa la memoria física del
              sistema y su formato es el de un fichero core. Con
              este pseudofichero y un binario del núcleo "sin
              desnudar" (/usr/src/linux/tools/zSystem), se puede
              usar GDB para examinar el estado actual de
              cualquier estrutura de datos del núcleo.

              La longitud total de este fichero es el tamaño de
              la memoria física (RAM) más 4KB.

       kmsg   Este fichero se puede usar en lugar de la llamada
              al sistema syslog(2) para registrar mensajes del
              núcleo. Un proceso debe tener permisos de
              superusuario para leer este fichero, y sólo un
              proceso debe leer este fichero. Este fichero no se
              debe leer si se está ejecutando un proceso syslog
              que usa la llamada al sistema syslog(2) para
              registrar mensajes del núcleo.

              A la información de este fichero se accede con el
              programa dmesg(8).

       ksyms  Este mantiene las difiniciones de símbolos
              exportados del núcleo usadas por las herramientas
              de manejo de modulos(X) para enlazar dinámicamente
              módulos.

       loadavg
              Los números de carga media dan el número promedio
              de trabajos en la cola de ejecución en los últimos
              1, 5 y 15 minutos. Estos números son idénticos a
              los números de carga media dados por uptime(1) y
              otros programas.

       malloc Este fichero sólo está presente si se definió
              CONFIGDEBUGMALLOC durante la compilación.

       meminfo
              Este es usado por free(1) para informar de la
              cantidad de memoria libre y usada en el sistema
              (tanto física como de intercambio) así como de la
              memoria compartida y los buffers usados por el
              núcleo.

              El formato es el mismo que el de free(1), salvo que
              los datos se dan en bytes y no en KB.

       modules
              Lista de módulos que han sido cargados por el
              sistema.

       net    directorio que contiene varios pseudoficheros, los
              cuales dan el estado de algunas partes de la capa
              de red. Estos ficheros contienen estructuras ASCII
              y, por tanto, se pueden leer con cat. Sin embargo,
              la aplicación netstat(8) proporciona un acceso
              mucho más claro a estos ficheros.

              arp    Este mantiene un vaciado ASCII legible de la
                     tabla ARP del núcleo usada para la
                     resolución de direcciones. Mostrará tanto
                     las entradas ARP aprendidas dinámicamente
                     como las preprogramadas. El formato es:
                   IP address       HW type     Flags       HW address
                   10.11.100.129    0x1         0x6         00:20:8A:00:0C:5A
                   10.11.100.5      0x1         0x2         00:C0:EA:00:00:4E
                   44.131.10.6      0x3         0x2         GW4PTS

              Donde 'IP address' es la dirección IPv4 de la
              máquina, 'HW type' es el tipo de hardware de la
              dirección según el RFC 826. 'Flags' son las
              banderas internas de la estructura ARP (tal y como
              se definen en /usr/include/linux/if_arp.h) y 'HW
              address' es, si se conoce, la dirección de la capa
              física asociada a la dirección IP.

              dev    El pseudofichero dev contiene información de
                     estado del dispositivo de red.  Da el número
                     de paquetes recividos y enviados, el número
                     de errores y colisiones y otras estadísticas
                     básicas. Estas son usadas por el programa
                     ifconfig(8) para informar del estado del
                     dispositivo. El formato es:
        Inter-|   Receive                  |   Transmit
         face |packets errs drop fifo frame|packets errs drop fifo colls carrier
            lo:      0    0    0    0    0     2353    0    0    0     0    0
          eth0: 644324    1    0    0    1   563770    0    0    0   581    0

              ipx    Information no disponible.

              ipx_route
                     Information no disponible.

              rarp   Este fichero usa el mismo formato que el
                     fichero arp y contiene la actual base de
                     datos de asociaciones inversas usada para
                     proporcionar los servicios de búsqueda de
                     direcciones inversas de rarp(8) Si RARP no
                     está configurado dentro del núcleo, este
                     fichero no estará presente.

              raw    Contiene un vaciado de la tabla de sockets
                     RAW. La mayor parte de esta información no
                     es útil salvo para propósitos de depuración.
                     El valor 'sl' es el número de entrada hash
                     del núcleo para el socket. 'local address'
                     es la pareja formada por la dirección local
                     y el número de puerto. 'St' es el estado
                     interno del socket. 'tx_queue' y 'rx_queue'
                     son las colas de datos de entrada y salida
                     en términos de uso de memoria del núcleo.
                     Los campos 'tr', 'tm->when' y 'rexmits' no
                     los usa RAW. El campo 'uid' contiene el
                     idenficador de usario efectivo del creador
                     del socket.

              route  Information no disponible, pero funciona de
                     forma parecida a route(8)

              snmp   Este fichero contiene los datos ASCII que
                     necesitan las Bases de Información para
                     Administración de IP, ICMP, TCP y UDP para
                     un agente SNMP.

              tcp    Contiene un vaciado de la tabla de sockets
                     TCP. La mayor parte de esta información no
                     es útil salvo para propósitos de depuración.
                     El valor 'sl' es el número de la ranura hash
                     del núcleo para el socket. 'local address'
                     es la pareja formada por la dirección local
                     y el número de puerto. 'remote address' es
                     la pareja formada por la dirección remota y
                     el número de puerto (si hay conexión). St'
                     es el estado interno del socket. 'tx_queue'
                     y 'rx_queue' son las colas de datos de
                     entrada y salida en términos de uso de
                     memoria del núcleo. Los campos 'tr',
                     'tm->when' y 'rexmits' contienen información
                     del núcleo del estado del socket y sólo son
                     útiles para depuración. El campo

              udp    Contiene un vaciado de la tabla de sockets
                     UDP. La mayor parte de esta información no
                     es útil salvo para propósitos de depuración.
                     El valor 'sl' es el número de la entrada
                     hash del núcleo para el socket. 'local
                     address' es la pareja formada por la
                     dirección local y el número de puerto.
                     'remote address' es la pareja formada por la
                     dirección remota y el número de puerto (si
                     hay conexión). St' es el estado interno del
                     socket. 'tx_queue' y 'rx_queue' son las
                     colas de datos de entrada y salida en
                     términos de uso de memoria del núcleo. Los
                     campos 'tr', 'tm->when' y 'rexmits' no son
                     usados por UDP.  El campo 'uid' contiene el
                     idenficador de usario efectivo del creador
                     del socket. El formato es:
sl  local_address rem_address   st tx_queue rx_queue tr rexmits  tm->when uid
 1: 01642C89:0201 0C642C89:03FF 01 00000000:00000001 01:000071BA 00000000 0
 1: 00000000:0801 00000000:0000 0A 00000000:00000000 00:00000000 6F000100 0
 1: 00000000:0201 00000000:0000 0A 00000000:00000000 00:00000000 00000000 0

              unix   Lista de sockets de dominio UNIX presentes
                     dentro del sistena y el estado de cada uno
                     de ellos. El formato es:
                     Num RefCount Protocol Flags    Type St Path
                      0: 00000002 00000000 00000000 0001 03
                      1: 00000001 00000000 00010000 0001 01 /dev/printer

              Donde 'Num' es el número de entrada en la tabla del
              núcleo, 'RefCount' es el número de usuarios del
              socket, 'Protocol' es, actualmente, siempre 0, del
              socket. 'Type' es, actualmente, siempre 1 (los
              sockets de dominio UNIX del tipo datagrama todavía
              no están soportados en el núcleo). 'St' es el
              estado interno del socket y 'Path' es, si existe,
              la ruta asociada del socket.

       pci    Es una lista de todos los dispositivos PCI
              encontrados durante la inicialización del núcleo y
              sus configuraciones respectivas.

       scsi   Directorio con pseudoficheros SCSI de nivel medio y
              varios directorios de drivers SCSI de bajo nivel,
              que contienen un fichero para cada host SCSI
              presente en el sistema, cada uno de los cuales da
              el estado de alguna parte del subsystema de E/S
              SCSI. Estos ficheros contienen estructuras ASCII y,
              por tanto, son legibles con cat.

              También se puede escribir en algunos de estos
              ficheros para reconfigurar el subsistema o para
              activar y desactivar ciertas características.

              scsi   Esta es una lista de todos los dispositivos
                     SCSI conocidos por el kernel. La lista es
                     similar a la que se ve durante el arranque.
                     Actualmente, scsi únicamente soporta la
                     orden singledevice que permite al
                     superusuario añadir a la lista de
                     dispositivos conocidos un dispositivo
                     conectado "en caliente".

                     echo `scsi singledevice 1 0 5 0` >
                     /proc/scsi/scsi hará que el host scsi1
                     explore el canal SCSI 0 en busca de un
                     dispositivo en la dirección ID 5 LUN 0. Si
                     ya hay un dispositivo conocido en esa
                     dirección o si la dirección es inválida, se
                     devolverá un error.

              drivername
                     Actualmente, drivername puede ser: 53c7,8xx,
                     BusLogic, NCR53c406a, advansys, aha152x,
                     aha1542, aha 1740, aic7xxx dtc, eata,
                     eata_dma, eata_pio, fdomain, g_NCR5380,
                     gdth, in2000, ncr53c8xx, pas16, ppa,
                     qlogicfas, qlocicisp, seagate, sg, st, t138,
                     u14-34f, ultrastor o wd7000.

                     Estos directorios presentan todos los
                     drivers que registraron al menos un HBA
                     SCSI. Cada directorio contiene un fichero
                     por host registrado. Cada fichero-host se
                     nombra tras el número que el host obtuvo
                     durante la inicialización.

                     La lectura de estos ficheros mostrará
                     normalmente la configuración del driver y el
                     host, estadísticas, etc.

                     La escritura en estos ficheros permite
                     diferentes cosas sobre diferentes hosts. Por
                     ejemplo, con las órdenes latency y nolatency
                     el superusuario puede activar y desactivar
                     en el driver eata_dma el código para la
                     medición de la latencia de las órdenes. Con
                     las órdenes lockup y unlock el superusuario
                     puede controlar las búsquedas de bus
                     simuladas por el driver scsi_debug.

       self   Este directorio hace referencia al proceso que está
              accediendo al sistema de ficheros /proc y es
              idéntico al directorio de /proc cuyo nombre es el
              PID del mismo proceso.

       stat   Estadísticas del núcleo/sistema.

              cpu  3357 0 4313 1362393
                     El número de jiffies (centésimas de segundo)
                     que el sistema gastó en modo usuario, modo
                     usuario con baja prioridad (nice), modo
                     supervisor y en la tarea 'idle',
                     respectivamente. El último valor debe ser
                     100 veces la segunda entrada del
                     pseudofichero uptime.

              disk 0 0 0 0
                     Las cuatro entradas de disco no están
                     implantadas en este momento. Incluso no
                     estoy seguro de lo que debe ser esto, ya que
                     las estadísticas del núcleo en otras
                     máquinas normalmente registran tanto las
                     tasas de transferencia como las operaciones
                     de E/S por segundo y éste sólo permite un
                     campo por controlador.

              page 5741 1808
                     El número de páginas que el sistema cargó y
                     el número de páginas que fueron descargadas
                     (desde disco).

              swap 1 0
                     El número de páginas de intercambio que han
                     sido introducidas y sacadas.

              intr 1462898
                     El número de interrupciones recibidas desde
                     el arranque del sistema.

              ctxt 115315
                     El número de cambios de contexto que el
                     sistema ha sufrido.

              btime 769041601
                     Instante de arranque, en segundos desde el 1
                     de Enero de 1970

       sys    Este directorio (presente desde la versión 1.3.57)
              contiene varios ficheros y subdirectorios
              correspondientes a variables del núcleo. Estas
              variables se pueden leer y algunas veces modificar
              usando el sistema de ficheros proc y usando la
              llamada al sistema sysctl(2).  Actualmente, existen
              los subdirectorios kernel, net, vm que contienen a
              su vez más ficheros y subdirectorios.

              kernel Este contiene los ficheros domainname, file-
                     max, file-nr, hostname, inode-max, inode-nr,
                     osrelease, ostype, panic, real-root-dev,
                     securelevel, version, cuya función se deduce
                     cláramente a partir del nombre.

              El fichero (de sólo lectura) file-nr da el número
              de ficheros abiertos en este momento.

              El fichero file-max da el número máximo de ficheros
              abiertos que el kernel es capaz de manejar.  Si
              1024 no es suficiente para usted, intente
              echo 4096 > /proc/sys/kernel/file-max

              De igual forma, los ficheros inode-nr y inode-max
              indican el número actual y máximo de nodos-i,
              respectivamente.

              Los ficheros ostype, osrelease, version dan
              subcadenas de /proc/version.

              El fichero panic da los accesos de
              lectura/escritura sobre la variable del núcleo
              panic_timeout.  Si esto es 0, el kernel entrará en
              un bucle infinito ante una situación de pánico; si
              no es cero, indica que el kernel debe
              autoreinicializarse después de ese número de
              segundos.

              El fichero securelevel parece bastante inútil por
              ahora - el superusuario es demasiado poderoso.

       uptime Este fichero contien dos números: los segundos que
              el sistema lleva funcionando y los segundos
              gastados en el proceso 'idle'.

       version
              Esta cadena identifica la versión del kernel que se
              está ejecutando actualmente. Por ejemplo:
            Linux version 1.0.9 (quinlan@phaze) #1 Sat May 14 01:51:54 EDT 1994


VÉASE TAMBIÉN
       cat(1), find(1), free(1), mount(1), ps(1), tr(1),
       uptime(1), readlink(2), mmap(2), chroot(2), syslog(2),
       hier(7), arp(8), dmesg(8), netstat(8), route(8),
       ifconfig(8), procinfo(8) y muchos más.

CONFORME A
       Esto conforma aproximadamente con el núcleo 1.3.11 de
       Linux. Por favor, actualice esto cuando sea necesario.

       Ultima actualización para la versión 1.3.11 de Linux.

ATENCIÓN
       Note que muchas cadenas (por ejemplo, el entorno y la
       línea de ordenes) están en formato interno, con los
       subcampos terminados por bytes NUL, por lo que puede
       encontrar que las cosas son más legibles si usa od -c o tr
       "\000" "\n" para leerlas.

       Esta página de manual está incompleta, posiblemente
       inexacta, y es el tipo de cosas que necesitan ser
       actualizadas con mucha frecuencia.

ERRORES
       El sistema de ficheros /proc puede introducir agujeros de
       seguridad en procesos ejecutándose con chroot(2).  Por
       ejemplo, si /proc se monta en la jerarquía chroot, un
       chdir(2) a /proc/1/root nos devolverá a la raíz original
       del sistema de ficheros. Esto puede ser considerado una
       característica en lugar de un error, ya que Linux no
       soporta ya la llamada fchroot(2).




Linux                     22 Julio 1996                   PROC(5)
