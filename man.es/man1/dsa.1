DSA(1)                       OpenSSL                       DSA(1)



NNAAMMEE
       dsa - DSA key processing

SSYYNNOOPPSSIISS
       ooppeennssssll ddssaa [--iinnffoorrmm PPEEMM||DDEERR] [--oouuttffoorrmm PPEEMM||DDEERR] [--iinn
       ffiilleennaammee] [--ppaassssiinn aarrgg] [--oouutt ffiilleennaammee] [--ppaassssoouutt aarrgg]
       [--ddeess] [--ddeess33] [--iiddeeaa] [--tteexxtt] [--nnoooouutt] [--mmoodduulluuss]
       [--ppuubbiinn] [--ppuubboouutt]

DDEESSCCRRIIPPTTIIOONN
       The ddssaa command processes DSA keys. They can be converted
       between various forms and their components printed out.
       NNoottee This command uses the traditional SSLeay compatible
       format for private key encryption: newer applications
       should use the more secure PKCS#8 format using the ppkkccss88

CCOOMMMMAANNDD OOPPTTIIOONNSS
       --iinnffoorrmm DDEERR||PPEEMM
           This specifies the input format. The DDEERR option with a
           private key uses an ASN1 DER encoded form of an ASN.1
           SEQUENCE consisting of the values of version
           (currently zero), p, q, g, the public and private key
           components respectively as ASN.1 INTEGERs. When used
           with a public key it uses a SubjectPublicKeyInfo
           structure: it is an error if the key is not DSA.

           The PPEEMM form is the default format: it consists of the
           DDEERR format base64 encoded with additional header and
           footer lines. In the case of a private key PKCS#8
           format is also accepted.

       --oouuttffoorrmm DDEERR||PPEEMM
           This specifies the output format, the options have the
           same meaning as the --iinnffoorrmm option.

       --iinn ffiilleennaammee
           This specifies the input filename to read a key from
           or standard input if this option is not specified. If
           the key is encrypted a pass phrase will be prompted
           for.

       --ppaassssiinn aarrgg
           the input file password source. For more information
           about the format of aarrgg see the PPAASSSS PPHHRRAASSEE AARRGGUUMMEENNTTSS
           section in openssl(1).

       --oouutt ffiilleennaammee
           This specifies the output filename to write a key to
           or standard output by is not specified. If any
           encryption options are set then a pass phrase will be
           prompted for. The output filename should nnoott be the
           same as the input filename.

       --ppaassssoouutt aarrgg
           the output file password source. For more information
           about the format of aarrgg see the PPAASSSS PPHHRRAASSEE AARRGGUUMMEENNTTSS
           section in openssl(1).

       --ddeess||--ddeess33||--iiddeeaa
           These options encrypt the private key with the DES,
           triple DES, or the IDEA ciphers respectively before
           outputting it. A pass phrase is prompted for.  If none
           of these options is specified the key is written in
           plain text. This means that using the ddssaa utility to
           read in an encrypted key with no encryption option can
           be used to remove the pass phrase from a key, or by
           setting the encryption options it can be use to add or
           change the pass phrase.  These options can only be
           used with PEM format output files.

       --tteexxtt
           prints out the public, private key components and
           parameters.

       --nnoooouutt
           this option prevents output of the encoded version of
           the key.

       --mmoodduulluuss
           this option prints out the value of the public key
           component of the key.

       --ppuubbiinn
           by default a private key is read from the input file:
           with this option a public key is read instead.

       --ppuubboouutt
           by default a private key is output. With this option a
           public key will be output instead. This option is
           automatically set if the input is a public key.

NNOOTTEESS
       The PEM private key format uses the header and footer
       lines:

        -----BEGIN DSA PRIVATE KEY-----
        -----END DSA PRIVATE KEY-----

       The PEM public key format uses the header and footer
       lines:

        -----BEGIN PUBLIC KEY-----
        -----END PUBLIC KEY-----


EEXXAAMMPPLLEESS
       To remove the pass phrase on a DSA private key:

        openssl dsa -in key.pem -out keyout.pem

       To encrypt a private key using triple DES:

        openssl dsa -in key.pem -des3 -out keyout.pem

       To convert a private key from PEM to DER format:

        openssl dsa -in key.pem -outform DER -out keyout.der

       To print out the components of a private key to standard
       output:

        openssl dsa -in key.pem -text -noout

       To just output the public part of a private key:

        openssl dsa -in key.pem -pubout -out pubkey.pem


SSEEEE AALLSSOO
       dsaparam(1), gendsa(1), rsa(1), genrsa(1)
























16/Feb/2000                   0.9.6c                       DSA(1)
