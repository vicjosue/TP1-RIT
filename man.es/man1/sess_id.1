SESS_ID(1)                   OpenSSL                   SESS_ID(1)



NNAAMMEE
       sess_id - SSL/TLS session handling utility

SSYYNNOOPPSSIISS
       ooppeennssssll sseessss_iidd [--iinnffoorrmm PPEEMM||DDEERR] [--oouuttffoorrmm PPEEMM||DDEERR] [--iinn
       ffiilleennaammee] [--oouutt ffiilleennaammee] [--tteexxtt] [--nnoooouutt] [--ccoonntteexxtt IIDD]

DDEESSCCRRIIPPTTIIOONN
       The sseessss_iidd process the encoded version of the SSL session
       structure and optionally prints out SSL session details
       (for example the SSL session master key) in human readable
       format. Since this is a diagnostic tool that needs some
       knowledge of the SSL protocol to use properly, most users
       will not need to use it.

       --iinnffoorrmm DDEERR||PPEEMM
           This specifies the input format. The DDEERR option uses
           an ASN1 DER encoded format containing session details.
           The precise format can vary from one version to the
           next.  The PPEEMM form is the default format: it consists
           of the DDEERR format base64 encoded with additional
           header and footer lines.

       --oouuttffoorrmm DDEERR||PPEEMM
           This specifies the output format, the options have the
           same meaning as the --iinnffoorrmm option.

       --iinn ffiilleennaammee
           This specifies the input filename to read session
           information from or standard input by default.

       --oouutt ffiilleennaammee
           This specifies the output filename to write session
           information to or standard output if this option is
           not specified.

       --tteexxtt
           prints out the various public or private key
           components in plain text in addition to the encoded
           version.

       --cceerrtt
           if a certificate is present in the session it will be
           output using this option, if the --tteexxtt option is also
           present then it will be printed out in text form.

       --nnoooouutt
           this option prevents output of the encoded version of
           the session.

       --ccoonntteexxtt IIDD
           this option can set the session id so the output
           session information uses the supplied ID. The ID can
           be any string of characters. This option wont normally
           be used.

OOUUTTPPUUTT
       Typical output:




        SSL-Session:
            Protocol  : TLSv1
            Cipher    : 0016
            Session-ID: 871E62626C554CE95488823752CBD5F3673A3EF3DCE9C67BD916C809914B40ED
            Session-ID-ctx: 01000000
            Master-Key: A7CEFC571974BE02CAC305269DC59F76EA9F0B180CB6642697A68251F2D2BB57E51DBBB4C7885573192AE9AEE220FACD
            Key-Arg   : None
            Start Time: 948459261
            Timeout   : 300 (sec)
            Verify return code 0 (ok)

       Theses are described below in more detail.

       PPrroottooccooll
           this is the protocol in use TLSv1, SSLv3 or SSLv2.

       CCiipphheerr
           the cipher used this is the actual raw SSL or TLS
           cipher code, see the SSL or TLS specifications for
           more information.

       SSeessssiioonn--IIDD
           the SSL session ID in hex format.

       SSeessssiioonn--IIDD--ccttxx
           the session ID context in hex format.

       MMaasstteerr--KKeeyy
           this is the SSL session master key.

       KKeeyy--AArrgg
           the key argument, this is only used in SSL v2.

       SSttaarrtt TTiimmee
           this is the session start time represented as an
           integer in standard Unix format.

       TTiimmeeoouutt
           the timeout in seconds.

       VVeerriiffyy rreettuurrnn ccooddee
           this is the return code when an SSL client certificate
           is verified.

NNOOTTEESS
       The PEM encoded session format uses the header and footer
       lines:

        -----BEGIN SSL SESSION PARAMETERS-----
        -----END SSL SESSION PARAMETERS-----

       Since the SSL session output contains the master key it is
       possible to read the contents of an encrypted session
       using this information. Therefore appropriate security
       precautions should be taken if the information is being
       output by a "real" application. This is however strongly
       discouraged and should only be used for debugging
       purposes.

BBUUGGSS
       The cipher and start time should be printed out in human
       readable form.

SSEEEE AALLSSOO
       ciphers(1), s_server(1)





























3/Feb/2000                    0.9.6c                   SESS_ID(1)
