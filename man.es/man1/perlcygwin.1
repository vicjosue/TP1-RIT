PERLCYGWIN(1)    Perl Programmers Reference Guide   PERLCYGWIN(1)



NNAAMMEE
       README.cygwin - Perl for Cygwin

SSYYNNOOPPSSIISS
       This document will help you configure, make, test and
       install Perl on Cygwin.  This document also describes fea­
       tures of Cygwin that will affect how Perl behaves at run­
       time.

       NNOOTTEE:: There are pre-built Perl packages available for Cyg­
       win and a version of Perl is provided on the Cygwin CD.
       If you do not need to customize the configuration, con­
       sider using one of these packages:

         http://cygutils.netpedia.net/


PPRREERREEQQUUIISSIITTEESS
       CCyyggwwiinn == GGNNUU++CCyyggnnuuss++WWiinnddoowwss ((DDoonn''tt lleeaavvee UUNNIIXX wwiitthhoouutt iitt))

       The Cygwin tools are ports of the popular GNU development
       tools for Win32 platforms.  They run thanks to the Cygwin
       library which provides the UNIX system calls and environ­
       ment these programs expect.  More information about this
       project can be found at:

         http://www.cygwin.com/

       A recent net or commercial release of Cygwin is required.

       At the time this document was last updated, Cygwin 1.1.5
       was current.

       NNOOTTEE:: At this point, minimal effort has been made to pro­
       vide compatibility with old (beta) Cygwin releases.  The
       focus has been to provide a high quality release and not
       worry about working around old bugs.  If you wish to use
       Perl with Cygwin B20.1 or earlier, consider using
       perl5.005_03, which is available in source and binary form
       at "http://cygutils.netpedia.net/".  If there is signifi­
       cant demand, a patch kit can be developed to port back to
       earlier Cygwin versions.

       CCyyggwwiinn CCoonnffiigguurraattiioonn

       While building Perl some changes may be necessary to your
       Cygwin setup so that Perl builds cleanly.  These changes
       are nnoott required for normal Perl usage.

       NNOOTTEE:: The binaries that are built will run on all Win32
       versions.  They do not depend on your host system
       (Win9x/WinME, WinNT/Win2K) or your Cygwin configuration
       (ntea, ntsec, binary/text mounts).  The only dependencies
       come from hard-coded pathnames like "/usr/local".  How­
       ever, your host system and Cygwin configuration will
       affect Perl's runtime behavior (see the TEST entry else­
       where in this document).

       · ""PATH""
           Set the "PATH" environment variable so that Configure
           finds the Cygwin versions of programs.  Any Windows
           directories should be removed or moved to the end of
           your "PATH".

       · nroff
           If you do not have nroff (which is part of the groff
           package), Configure will nnoott prompt you to install man
           pages.

       · Permissions
           On WinNT with either the ntea or ntsec "CYGWIN" set­
           tings, directory and file permissions may not be set
           correctly.  Since the build process creates directo­
           ries and files, to be safe you may want to run a
           `"chmod -R +w *"' on the entire Perl source tree.

           Also, it is a well known WinNT "feature" that files
           created by a login that is a member of the Administra­
           tors group will be owned by the Administrators group.
           Depending on your umask, you may find that you can not
           write to files that you just created (because you are
           no longer the owner).  When using the ntsec "CYGWIN"
           setting, this is not an issue because it "corrects"
           the ownership to what you would expect on a UNIX sys­
           tem.

CCOONNFFIIGGUURREE
       The default options gathered by Configure with the assis­
       tance of hints/cygwin.sh will build a Perl that supports
       dynamic loading (which requires a shared libperl.dll).

       This will run Configure and keep a record:

         ./Configure 2>&1 | tee log.configure

       If you are willing to accept all the defaults run Config­
       ure with --ddee.  However, several useful customizations are
       available.

       SSttrriipp BBiinnaarriieess

       It is possible to strip the EXEs and DLLs created by the
       build process.  The resulting binaries will be signifi­
       cantly smaller.  If you want the binaries to be stripped,
       you can either add a --ss option when Configure prompts you,

         Any additional ld flags (NOT including libraries)? [none] -s
         Any special flags to pass to gcc to use dynamic linking? [none] -s
         Any special flags to pass to ld2 to create a dynamically loaded library?
         [none] -s

       or you can edit hints/cygwin.sh and uncomment the relevant
       variables near the end of the file.

       OOppttiioonnaall LLiibbrraarriieess

       Several Perl functions and modules depend on the existence
       of some optional libraries.  Configure will find them if
       they are installed in one of the directories listed as
       being used for library searches.  Pre-built packages for
       most of these are available at "http://cygutils.netpe­
       dia.net/".

       · ""-lcrypt""
           The crypt package distributed with Cygwin is a Linux
           compatible 56-bit DES crypt port by Corinna Vinschen.

           Alternatively, the crypt libraries in GNU libc have
           been ported to Cygwin.

           The DES based Ultra Fast Crypt port was done by Alexey
           Truhan:

             ftp://ftp.franken.de/pub/win32/develop/gnuwin32/cygwin/porters/Okhapkin_Sergey/cw32crypt-dist-0.tgz

           NOTE: There are various export restrictions on DES
           implementations, see the glibc README for more
           details.

           The MD5 port was done by Andy Piper:

             ftp://ftp.franken.de/pub/win32/develop/gnuwin32/cygwin/porters/Okhapkin_Sergey/libcrypt.tgz


       · ""-lgdbm"" (""use GDBM_File"")
           GDBM is available for Cygwin.  GDBM's ndbm/dbm compat­
           ibility feature also makes "NDBM_File" and "ODBM_File"
           possible (although they add little extra value).

           NOTE: The ndbm/dbm emulations only completely work on
           NTFS partitions.

       · ""-ldb"" (""use DB_File"")
           BerkeleyDB is available for Cygwin.  Some details can
           be found in ext/DB_File/DB_File.pm.

           NOTE: The BerkeleyDB library only completely works on
           NTFS partitions.

       · ""-lcygipc"" (""use IPC::SysV"")
           A port of SysV IPC is available for Cygwin.

           NOTE: This has nnoott been extensively tested.  In par­
           ticular, "d_semctl_semun" is undefined because it
           fails a Configure test and on Win9x the shm*() func­
           tions seem to hang.  It also creates a compile time
           dependency because perl.h includes <sys/ipc.h> and
           <sys/sem.h> (which will be required in the future when
           compiling CPAN modules).

       CCoonnffiigguurree--ttiimmee OOppttiioonnss

       The INSTALL document describes several Configure-time
       options.  Some of these will work with Cygwin, others are
       not yet possible.  Also, some of these are experimental.
       You can either select an option when Configure prompts you
       or you can define (undefine) symbols on the command line.

       · ""-Uusedl""
           Undefining this symbol forces Perl to be compiled
           statically.

       · ""-Uusemymalloc""
           By default Perl uses the malloc() included with the
           Perl source.  If you want to force Perl to build with
           the system malloc() undefine this symbol.

       · ""-Dusemultiplicity""
           Multiplicity is required when embedding Perl in a C
           program and using more than one interpreter instance.
           This works with the Cygwin port.

       · ""-Duseperlio""
           The PerlIO abstraction works with the Cygwin port.

       · ""-Duse64bitint""
           gcc supports 64-bit integers.  However, several addi­
           tional long long functions are necessary to use them
           within Perl ({strtol,strtoul}l).  These are nnoott yet
           available with Cygwin.

       · ""-Duselongdouble""
           gcc supports long doubles (12 bytes).  However, sev­
           eral additional long double math functions are neces­
           sary to use them within Perl
           ({atan2,cos,exp,floor,fmod,frexp,isnan,log,modf,pow,sin,sqrt}l,str­
           told).  These are nnoott yet available with Cygwin.

       · ""-Dusethreads""
           POSIX threads are nnoott yet implemented in Cygwin.

       · ""-Duselargefiles""
           Although Win32 supports large files, Cygwin currently
           uses 32-bit integers for internal size and position
           calculations.

       SSuussppiicciioouuss WWaarrnniinnggss

       You may see some messages during Configure that seem sus­
       picious.

       · dlsym()
           ld2 is needed to build dynamic libraries, but it does
           not exist when dlsym() checking occurs (it is not cre­
           ated until `"make"' runs).  You will see the following
           message:

             Checking whether your dlsym() needs a leading underscore ...
             ld2: not found
             I can't compile and run the test program.
             I'm guessing that dlsym doesn't need a leading underscore.

           Since the guess is correct, this is not a problem.

       · Win9x and ""d_eofnblk""
           Win9x does not correctly report "EOF" with a non-
           blocking read on a closed pipe.  You will see the fol­
           lowing messages:

             But it also returns -1 to signal EOF, so be careful!
             WARNING: you can't distinguish between EOF and no data!

             *** WHOA THERE!!! ***
                 The recommended value for $d_eofnblk on this machine was "define"!
                 Keep the recommended value? [y]

           At least for consistency with WinNT, you should keep
           the recommended value.

       · Compiler/Preprocessor defines
           The following error occurs because of the Cygwin
           "#define" of "_LONG_DOUBLE":

             Guessing which symbols your C compiler and preprocessor define...
             try.c:<line#>: parse error

           This failure does not seem to cause any problems.

MMAAKKEE
       Simply run make and wait:

         make 2>&1 | tee log.make


       WWaarrnniinnggss

       Warnings like these are normal:

         warning: overriding commands for target <file>
         warning: ignoring old commands for target <file>

         dllwrap: no export definition file provided
         dllwrap: creating one, but that may not be what you want


       lldd22

       During `"make"', ld2 will be created and installed in your
       $installbin directory (where you said to put public exe­
       cutables).  It does not wait until the `"make install"'
       process to install the ld2 script, this is because the
       remainder of the `"make"' refers to ld2 without fully
       specifying its path and does this from multiple subdirec­
       tories.  The assumption is that $installbin is in your
       current "PATH".  If this is not the case `"make"' will
       fail at some point.  If this happens, just manually copy
       ld2 from the source directory to somewhere in your "PATH".

TTEESSTT
       There are two steps to running the test suite:

         make test 2>&1 | tee log.make-test

         cd t;./perl harness 2>&1 | tee ../log.harness

       The same tests are run both times, but more information is
       provided when running as `"./perl harness"'.

       Test results vary depending on your host system and your
       Cygwin configuration.  If a test can pass in some Cygwin
       setup, it is always attempted and explainable test fail­
       ures are documented.  It is possible for Perl to pass all
       the tests, but it is more likely that some tests will fail
       for one of the reasons listed below.

       FFiillee PPeerrmmiissssiioonnss

       UNIX file permissions are based on sets of mode bits for
       {read,write,execute} for each {user,group,other}.  By
       default Cygwin only tracks the Win32 read-only attribute
       represented as the UNIX file user write bit (files are
       always readable, files are executable if they have a
       .{com,bat,exe} extension or begin with "#!", directories
       are always readable and executable).  On WinNT with the
       ntea "CYGWIN" setting, the additional mode bits are stored
       as extended file attributes.  On WinNT with the ntsec
       "CYGWIN" setting, permissions use the standard WinNT secu­
       rity descriptors and access control lists.  Without one of
       these options, these tests will fail:







         Failed Test           List of failed
         ------------------------------------
         io/fs.t               5, 7, 9-10
         lib/anydbm.t          2
         lib/db-btree.t        20
         lib/db-hash.t         16
         lib/db-recno.t        18
         lib/gdbm.t            2
         lib/ndbm.t            2
         lib/odbm.t            2
         lib/sdbm.t            2
         op/stat.t             9, 20 (.tmp not an executable extension)


       HHaarrdd LLiinnkkss

       FAT partitions do not support hard links (whereas NTFS
       does), in which case Cygwin implements link() by copying
       the file.  On remote (network) drives Cygwin's stat()
       always sets "st_nlink" to 1, so the link count for remote
       directories and files is not available.  In either case,
       these tests will fail:

         Failed Test           List of failed
         ------------------------------------
         io/fs.t               4
         op/stat.t             3


       FFiilleettiimmee GGrraannuullaarriittyy

       On FAT partitions the filetime granularity is 2 seconds.
       The following test will fail:

         Failed Test           List of failed
         ------------------------------------
         io/fs.t               18


       TTaaiinnttiinngg CChheecckkss

       When Perl is running in taint mode, "$ENV{PATH}" is con­
       sidered tainted and not used, so DLLs not in the default
       system directories will not be found.  While the tests are
       running you will see warnings popup from the system with
       messages like:

         Win9x
           Error Starting Program
           A required .DLL file, CYGWIN1.DLL, was not found

         WinNT
           perl.exe - Unable to Locate DLL
           The dynamic link library cygwin1.dll could not be found in the
             specified path ...

       Just click OK and ignore them.  When running `"make
       test"', 2 popups occur.  During `"./perl harness"', 4 pop­
       ups occur.  Also, these tests will fail:

         Failed Test           List of failed
         ------------------------------------
         op/taint.t            1, 3, 31, 37

       Alternatively, you can copy cygwin1.dll into the directory
       where the tests run:

         cp /bin/cygwin1.dll t

       or one of the Windows system directories (although, this
       is nnoott recommended).

       //eettcc//ggrroouupp

       Cygwin does not require /etc/group, in which case the
       op/grent.t test will be skipped.  The check performed by
       op/grent.t expects to see entries that use the members
       field, otherwise this test will fail:

         Failed Test           List of failed
         ------------------------------------
         op/grent.t            1


       SSccrriipptt PPoorrttaabbiilliittyy

       Cygwin does an outstanding job of providing UNIX-like
       semantics on top of Win32 systems.  However, in addition
       to the items noted above, there are some differences that
       you should know about.  This is a very brief guide to
       portability, more information can be found in the Cygwin
       documentation.

       · Pathnames
           Cygwin pathnames can be separated by forward (/) or
           backward (\) slashes.  They may also begin with drive
           letters (C:) or Universal Naming Codes (//UNC).  DOS
           device names (aux, con, prn, com*, lpt?, nul) are
           invalid as base filenames.  However, they can be used
           in extensions (e.g., hello.aux).  Names may contain
           all printable characters except these:

             : * ? " < > |

           File names are case insensitive, but case preserving.
           A pathname that contains a backslash or drive letter
           is a Win32 pathname (and not subject to the transla­
           tions applied to POSIX style pathnames).

       · Text/Binary
           When a file is opened it is in either text or binary
           mode.  In text mode a file is subject to CR/LF/Ctrl-Z
           translations.  With Cygwin, the default mode for an
           open() is determined by the mode of the mount that
           underlies the file.  Perl provides a binmode() func­
           tion to set binary mode on files that otherwise would
           be treated as text.  sysopen() with the "O_TEXT" flag
           sets text mode on files that otherwise would be
           treated as binary:

               sysopen(FOO, "bar", O_WRONLY|O_CREAT|O_TEXT)

           lseek(), tell() and sysseek() only work with files
           opened in binary mode.

           The text/binary issue is covered at length in the Cyg­
           win documentation.

       · .exe
           The Cygwin stat(), lstat() and readlink() functions
           make the .exe extension transparent by looking for
           foo.exe when you ask for foo (unless a foo also
           exists).  Cygwin does not require a .exe extension,
           but gcc adds it automatically when building a program.
           However, when accessing an executable as a normal file
           (e.g., cp in a makefile) the .exe is not transparent.
           The install included with Cygwin automatically appends
           a .exe when necessary.

       · chown()
           On WinNT chown() can change a file's user and group
           IDs.  On Win9x chown() is a no-op, although this is
           appropriate since there is no security model.

       · Miscellaneous
           File locking using the "F_GETLK" command to fcntl() is
           a stub that returns "ENOSYS".

           Win9x can not rename() an open file (although WinNT
           can).

           The Cygwin chroot() implementation has holes (it can
           not restrict file access by native Win32 programs).

IINNSSTTAALLLL
       This will install Perl, including man pages.

         make install | tee log.make-install

       NOTE: If "STDERR" is redirected `"make install"' will nnoott
       prompt you to install perl into /usr/bin.

       You may need to be Administrator to run `"make install"'.
       If you are not, you must have write access to the directo­
       ries in question.

       Information on installing the Perl documentation in HTML
       format can be found in the INSTALL document.

MMAANNIIFFEESSTT
       These are the files in the Perl release that contain ref­
       erences to Cygwin.  These very brief notes attempt to
       explain the reason for all conditional code.  Hopefully,
       keeping this up to date will allow the Cygwin port to be
       kept as clean as possible.

       Documentation
             INSTALL README.cygwin README.win32 MANIFEST
             Changes Changes5.005 Changes5.004 Changes5.6
             pod/perl.pod pod/perlport.pod pod/perlfaq3.pod
             pod/perldelta.pod pod/perl5004delta.pod pod/perl56delta.pod
             pod/perlhist.pod pod/perlmodlib.pod pod/buildtoc.PL pod/perltoc.pod


       Build, Configure, Make, Install













             cygwin/Makefile.SHs
             cygwin/ld2.in
             cygwin/perlld.in
             ext/IPC/SysV/hints/cygwin.pl
             ext/NDBM_File/hints/cygwin.pl
             ext/ODBM_File/hints/cygwin.pl
             hints/cygwin.sh
             Configure             - help finding hints from uname,
                                     shared libperl required for dynamic loading
             Makefile.SH           - linklibperl
             Porting/patchls       - cygwin in port list
             installman            - man pages with :: translated to .
             installperl           - install dll/ld2/perlld, install to pods
             makedepend.SH         - uwinfix


       Tests
             t/io/tell.t           - binmode
             t/lib/b.t             - ignore Cwd from os_extras
             t/lib/glob-basic.t    - Win32 directory list access differs from read mode
             t/op/magic.t          - $^X/symlink WORKAROUND, s/.exe//
             t/op/stat.t           - no /dev, skip Win32 ftCreationTime quirk
                                     (cache manager sometimes preserves ctime of file
                                     previously created and deleted), no -u (setuid)


       Compiled Perl Source
             EXTERN.h              - __declspec(dllimport)
             XSUB.h                - __declspec(dllexport)
             cygwin/cygwin.c       - os_extras (getcwd, spawn)
             perl.c                - os_extras
             perl.h                - binmode
             doio.c                - win9x can not rename a file when it is open
             pp_sys.c              - do not define h_errno, pp_system with spawn
             util.c                - use setenv


       Compiled Module Source
             ext/POSIX/POSIX.xs    - tzname defined externally
             ext/SDBM_File/sdbm/pair.c
                                   - EXTCONST needs to be redefined from EXTERN.h
             ext/SDBM_File/sdbm/sdbm.c
                                   - binary open


       Perl Modules/Scripts
             lib/Cwd.pm            - hook to internal Cwd::cwd
             lib/ExtUtils/MakeMaker.pm
                                   - require MM_Cygwin.pm
             lib/ExtUtils/MM_Cygwin.pm
                                   - canonpath, cflags, manifypods, perl_archive
             lib/File/Find.pm      - on remote drives stat() always sets st_nlink to 1
             lib/File/Spec/Unix.pm - preserve //unc
             lib/File/Temp.pm      - no directory sticky bit
             lib/perl5db.pl        - use stdin not /dev/tty
             utils/perldoc.PL      - version comment


BBUUGGSS
       When make starts, it warns about overriding commands for
       perlmain.o.

       `"make clean"' does not remove library .def or .exe.stack­
       dump files.

       The ld2 script contains references to the source
       directory.  You should change these to $installbin after
       `"make install"'.

       Support for swapping real and effective user and group IDs
       is incomplete.  On WinNT Cygwin provides setuid(),
       seteuid(), setgid() and setegid().  However, additional
       Cygwin calls for manipulating WinNT access tokens and
       security contexts are required.

       When building DLLs, `"dllwrap --export-all-symbols"' is
       used to export global symbols.  It might be better to gen­
       erate an explicit .def file (see makedef.pl).  Also, DLLs
       can now be build with `"gcc -shared"'.

AAUUTTHHOORRSS
       Charles Wilson <cwilson@ece.gatech.edu>, Eric Fifer
       <egf7@columbia.edu>, alexander smishlajev <als@turn­
       here.com>, Steven Morlock <newspost@morlock.net>,
       Sebastien Barre <Sebastien.Barre@utc.fr>, Teun Burgers
       <burgers@ecn.nl>.

HHIISSTTOORRYY
       Last updated: 9 November 2000



2001-03-18                 perl v5.6.1              PERLCYGWIN(1)
